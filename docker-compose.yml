version: '3.8'

services:
  # Auth Service (our Go application)
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=auth_service.db
      - DATABASE_DRIVER=sqlite
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_FROM=noreply@auth-service.local
      - HYDRA_ADMIN_URL=http://hydra:4445
      - HYDRA_PUBLIC_URL=http://localhost:4444
      - KRATOS_ADMIN_URL=http://kratos:4434
      - KRATOS_PUBLIC_URL=http://localhost:4433
      - JWT_SECRET=super-secret-jwt-key-for-development
      - ENVIRONMENT=development
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
      - mailhog
      - hydra
      - kratos
    networks:
      - auth-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=auth_service
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=auth_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - auth-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auth-network

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - auth-network

  # ORY Hydra (OAuth2/OIDC Server)
  hydra-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      - DSN=postgres://hydra_user:hydra_password@postgres:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - ./config/hydra:/etc/config/hydra
    depends_on:
      - postgres
    networks:
      - auth-network

  hydra:
    image: oryd/hydra:v2.2.0
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - ./config/hydra:/etc/config/hydra
    environment:
      - DSN=postgres://hydra_user:hydra_password@postgres:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      - SECRETS_SYSTEM=youReallyNeedToChangeThis
      - URLS_SELF_ISSUER=http://localhost:4444/
      - URLS_CONSENT=http://localhost:3000/consent
      - URLS_LOGIN=http://localhost:3000/login
    depends_on:
      - hydra-migrate
    networks:
      - auth-network

  # ORY Kratos (Identity Management)
  kratos-migrate:
    image: oryd/kratos:v1.0.0
    environment:
      - DSN=postgres://kratos_user:kratos_password@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - ./config/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    depends_on:
      - postgres
    networks:
      - auth-network

  kratos:
    image: oryd/kratos:v1.0.0
    ports:
      - "4433:4433" # Public port
      - "4434:4434" # Admin port
    environment:
      - DSN=postgres://kratos_user:kratos_password@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - ./config/kratos:/etc/config/kratos
    depends_on:
      - kratos-migrate
    networks:
      - auth-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - auth-network

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - auth-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  auth-network:
    driver: bridge
